{"version":3,"sources":["global/_global.scss","global/_fonts.scss","global/_override.scss","global/_mq.scss","global/_helpers.scss","common/i-svg.scss","blocks/main.scss","blocks/header.scss","blocks/menu.scss","blocks/content.scss","blocks/carousel.scss","blocks/about.scss","blocks/footer.scss","blocks/social.scss","blocks/block.scss","blocks/card.scss","blocks/modal.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["html {\r\n  overflow-x: hidden;\r\n  overflow-y: scroll;\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  height: auto;\r\n  min-height: 100%;\r\n  min-width: 320px;\r\n  overflow: auto;\r\n  font-size: 14px;\r\n  font-family: $circleLight, Arial, 'sans-serif';\r\n  -webkit-text-size-adjust: none;\r\n}\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n\r\n  &:before,\r\n  &:after {\r\n    box-sizing: border-box;\r\n  }\r\n}\r\n\r\na  {\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: #000000;\r\n  outline: none;\r\n}\r\n\r\nh1, h2, h3, h4, h5 {\r\n  margin: 0;\r\n}\r\n\r\nul {\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n}\r\n\r\np {\r\n  display: inline-block;\r\n  margin: 0;\r\n  -ms-hyphens: auto;\r\n  -moz-hyphens: auto;\r\n  -webkit-hyphens: auto;\r\n  hyphens: auto;\r\n}\r\n\r\ndt, dd {\r\n  display: inline-block;\r\n}\r\n\r\nimg {\r\n  user-select: none;\r\n}","// CircleBold\r\n@font-face {\r\n  font-family: 'CircleBold';\r\n  src: url('../fonts/circle_bold/Circe-Bold.eot');\r\n  src: url('../fonts/circle_bold/Circe-Bold.eot?#iefix') format('embedded-opentype'),\r\n       url('../fonts/circle_bold/Circe-Bold.ttf') format('truetype'),\r\n       url('../fonts/circle_bold/Circe-Bold.woff') format('woff');\r\n  font-weight: normal;\r\n  font-style: normal;\r\n  text-rendering: optimizeLegibility;\r\n}\r\n\r\n//CircleLight\r\n@font-face {\r\n  font-family: 'CircleLight';\r\n  src: url('../fonts/circle_light/Circle-Light.eot');\r\n  src: url('../fonts/circle_light/Circle-Light.eot?#iefix') format('embedded-opentype'),\r\n       url('../fonts/circle_light/Circle-Light.ttf') format('truetype'),\r\n       url('../fonts/circle_light/Circle-Light.woff') format('woff');\r\n  font-weight: normal;\r\n  font-style: normal;\r\n  text-rendering: optimizeLegibility;\r\n}\r\n\r\n// CircleExtraBold\r\n@font-face {\r\n  font-family: 'CircleExtraBold';\r\n  src: url('../fonts/circle_extrabold/Circe-ExtraBold.eot');\r\n  src: url('../fonts/circle_extrabold/Circe-ExtraBold.eot?#iefix') format('embedded-opentype'),\r\n       url('../fonts/circle_extrabold/Circe-ExtraBold.ttf') format('truetype'),\r\n       url('../fonts/circle_extrabold/Circe-ExtraBold.woff') format('woff');\r\n  font-weight: normal;\r\n  font-style: normal;\r\n  text-rendering: optimizeLegibility;\r\n}\r\n\r\n/*@font-face {\r\n  font-family: 'Crosshatcher';\r\n  src: url('../fonts/Crosshatcher/Crosshatcher.eot'); !* IE9 Compat Modes *!\r\n  src: url('../fonts/Crosshatcher/Crosshatcher.eot?#iefix') format('embedded-opentype'), !* IE6-IE8 *!\r\n  url('../fonts/Crosshatcher/Crosshatcher.woff2') format('woff2'), !* Modern Browsers *!\r\n  url('../fonts/Crosshatcher/Crosshatcher.woff') format('woff'), !* Modern Browsers *!\r\n  url('../fonts/Crosshatcher/Crosshatcher.ttf') format('truetype'), !* Safari, Android, iOS *!\r\n  url('../fonts/Crosshatcher/Crosshatcher.svg#ProximaNova-Black') format('svg'); !* Legacy iOS *!\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  text-rendering: optimizeLegibility;\r\n}*/\r\n","// Slick slider\r\n\r\n.slick-dots {\r\n\r\n  li {\r\n    width: 10px;\r\n    height: 10px;\r\n    border: 1px solid #cecece;\r\n    border-radius: 50%;\r\n\r\n    button {\r\n      width: 8px;\r\n      height: 8px;\r\n\r\n      &:before {\r\n        width: 100%;\r\n        height: 100%;\r\n        color: transparent;\r\n        border-radius: 50%;\r\n      }\r\n    }\r\n\r\n    &.slick-active {\r\n      border-color: #afafaf;\r\n\r\n      button:before {\r\n        opacity: 1;\r\n        background: #cecece;\r\n        color: transparent;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.slick-arrow {\r\n  font-size: 17px;\r\n  color: #000;\r\n  z-index: 1;\r\n\r\n  &:before {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.slick-prev {\r\n  left: 10px;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: inherit;\r\n  }\r\n}\r\n\r\n.slick-next {\r\n  right: 10px;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: inherit;\r\n  }\r\n}\r\n\r\n.slick-slide {\r\n\r\n  &:active,\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n}\r\n\r\n.slick-arrow_circle {\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 1px solid $white;\r\n  border-radius: 50%;\r\n  line-height: 52px;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  z-index: 1;\r\n  color: $white;\r\n  transition: border-color .35s, backgroud-color .35s;\r\n\r\n  &:hover {\r\n    color: #afafaf;\r\n    border-color: #afafaf;\r\n  }\r\n\r\n  &:before {\r\n    display: none;\r\n  }\r\n\r\n  &.slick-arrow_grey {\r\n    border-color: #D2D1D1;\r\n    color: #D2D1D1;\r\n\r\n    &:hover {\r\n      color: #afafaf;\r\n      border-color: #afafaf;\r\n\r\n      &.slick-disabled {\r\n        border-color: #D2D1D1;\r\n        color: #D2D1D1;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // disabled {\r\n  &.slick-disabled {\r\n    cursor: default;\r\n  }\r\n}\r\n\r\n\r\n// Remodal\r\n\r\n.remodal {\r\n  padding: 10px;\r\n  max-width: none;\r\n  width: auto;\r\n  background: transparent;\r\n\r\n  &-wrapper {\r\n    padding: 0;\r\n  }\r\n\r\n  &-overlay {\r\n\r\n  }\r\n\r\n  // 768+\r\n  //------------------\r\n  @include mq(bp768) {\r\n    padding: 0;\r\n  }\r\n\r\n  // 1024+\r\n  //------------------\r\n  @include mq(bp1024) {\r\n\r\n  }\r\n}","@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\r\n// See https://github.com/sass-mq/sass-mq/pull/10\r\n\r\n/// Base font size on the `<body>` element\r\n/// @type Number (unit)\r\n$mq-base-font-size: 16px !default;\r\n\r\n/// Responsive mode\r\n///\r\n/// Set to `false` to enable support for browsers that do not support @media queries,\r\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\r\n///\r\n/// You could create a stylesheet served exclusively to older browsers,\r\n/// where @media queries are rasterized\r\n///\r\n/// @example scss\r\n///  // old-ie.scss\r\n///  $mq-responsive: false;\r\n///  @include 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\r\n///                   // larger breakpoints will be ignored\r\n///\r\n/// @type Boolean\r\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\r\n$mq-responsive: true !default;\r\n\r\n/// Breakpoint list\r\n///\r\n/// Name your breakpoints in a way that creates a ubiquitous language\r\n/// across team members. It will improve communication between\r\n/// stakeholders, designers, developers, and testers.\r\n///\r\n/// @type Map\r\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\r\n$mq-breakpoints: (\r\n        mobile:  320px,\r\n        tablet:  740px,\r\n        desktop: 980px,\r\n        wide:    1300px\r\n) !default;\r\n\r\n/// Static breakpoint (for fixed-width layouts)\r\n///\r\n/// Define the breakpoint from $mq-breakpoints that should\r\n/// be used as the target width for the fixed-width layout\r\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\r\n///\r\n/// @example scss\r\n///  // tablet-only.scss\r\n///  //\r\n///  // Ignore all styles above tablet breakpoint,\r\n///  // and fix the styles (e.g. layout) at tablet width\r\n///  $mq-responsive: false;\r\n///  $mq-static-breakpoint: tablet;\r\n///  @include 'main'; // @media queries in this file will be rasterized up to tablet\r\n///                   // larger breakpoints will be ignored\r\n///\r\n/// @type String\r\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\r\n$mq-static-breakpoint: desktop !default;\r\n\r\n/// Show breakpoints in the top right corner\r\n///\r\n/// If you want to display the currently active breakpoint in the top\r\n/// right corner of your site during development, add the breakpoints\r\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\r\n///\r\n/// @type map\r\n$mq-show-breakpoints: () !default;\r\n\r\n/// Customize the media type (e.g. `@media screen` or `@media print`)\r\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\r\n///\r\n/// @type String\r\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\r\n$mq-media-type: all !default;\r\n\r\n/// Convert pixels to ems\r\n///\r\n/// @param {Number} $px - value to convert\r\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\r\n///\r\n/// @example scss\r\n///  $font-size-in-ems: mq-px2em(16px);\r\n///  p { font-size: mq-px2em(16px); }\r\n///\r\n/// @requires $mq-base-font-size\r\n/// @returns {Number}\r\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\r\n  @if unitless($px) {\r\n    @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\r\n    @return mq-px2em($px * 1px, $base-font-size);\r\n  } @else if unit($px) == em {\r\n    @return $px;\r\n  }\r\n  @return ($px / $base-font-size) * 1em;\r\n}\r\n\r\n/// Get a breakpoint's width\r\n///\r\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\r\n///\r\n/// @example scss\r\n///  $tablet-width: mq-get-breakpoint-width(tablet);\r\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\r\n///\r\n/// @requires {Variable} $mq-breakpoints\r\n///\r\n/// @returns {Number} Value in pixels\r\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\r\n  @if map-has-key($breakpoints, $name) {\r\n    @return map-get($breakpoints, $name);\r\n  } @else {\r\n    @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\r\n  }\r\n}\r\n\r\n/// Media Query mixin\r\n///\r\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\r\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\r\n/// @param {String | Boolean} $and (false) - Additional media query parameters\r\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\r\n///\r\n/// @ignore Undocumented API, for advanced use only:\r\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\r\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\r\n///\r\n/// @content styling rules, wrapped into a @media query when $responsive is true\r\n///\r\n/// @requires {Variable} $mq-media-type\r\n/// @requires {Variable} $mq-breakpoints\r\n/// @requires {Variable} $mq-static-breakpoint\r\n/// @requires {function} mq-px2em\r\n/// @requires {function} mq-get-breakpoint-width\r\n///\r\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\r\n///\r\n/// @example scss\r\n///  .element {\r\n///    @include mq($from: mobile) {\r\n///      color: red;\r\n///    }\r\n///    @include mq($until: tablet) {\r\n///      color: blue;\r\n///    }\r\n///    @include mq(mobile, tablet) {\r\n///      color: green;\r\n///    }\r\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\r\n///      color: teal;\r\n///    }\r\n///    @include mq(950px) {\r\n///      color: hotpink;\r\n///    }\r\n///    @include mq(tablet, $media-type: screen) {\r\n///      color: hotpink;\r\n///    }\r\n///    // Advanced use:\r\n///    $my-breakpoints: ( L: 900px, XL: 1200px );\r\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\r\n///      color: hotpink;\r\n///    }\r\n///  }\r\n@mixin mq(\r\n  $from: false,\r\n  $until: false,\r\n  $and: false,\r\n  $media-type: $mq-media-type,\r\n  $breakpoints: $mq-breakpoints,\r\n  $responsive: $mq-responsive,\r\n  $static-breakpoint: $mq-static-breakpoint\r\n) {\r\n  $min-width: 0;\r\n  $max-width: 0;\r\n  $media-query: '';\r\n\r\n  // From: this breakpoint (inclusive)\r\n  @if $from {\r\n    @if type-of($from) == number {\r\n      $min-width: mq-px2em($from);\r\n    } @else {\r\n      $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\r\n    }\r\n  }\r\n\r\n  // Until: that breakpoint (exclusive)\r\n  @if $until {\r\n    @if type-of($until) == number {\r\n      $max-width: mq-px2em($until);\r\n    } @else {\r\n      $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\r\n    }\r\n  }\r\n\r\n  // Responsive support is disabled, rasterize the output outside @media blocks\r\n  // The browser will rely on the cascade itself.\r\n  @if $responsive == false {\r\n    $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\r\n    $target-width: mq-px2em($static-breakpoint-width);\r\n\r\n    // Output only rules that start at or span our target width\r\n    @if (\r\n            $and == false\r\n            and $min-width <= $target-width\r\n            and (\r\n                $until == false or $max-width >= $target-width\r\n            )\r\n    ) {\r\n      @content;\r\n    }\r\n  }\r\n\r\n    // Responsive support is enabled, output rules inside @media queries\r\n  @else {\r\n    @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\r\n    @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\r\n    @if $and            { $media-query: '#{$media-query} and #{$and}'; }\r\n\r\n    // Remove unnecessary media query prefix 'all and '\r\n    @if ($media-type == 'all' and $media-query != '') {\r\n      $media-type: '';\r\n      $media-query: str-slice(unquote($media-query), 6);\r\n    }\r\n\r\n    @media #{$media-type + $media-query} {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n/// Add a breakpoint\r\n///\r\n/// @param {String} $name - Name of the breakpoint\r\n/// @param {Number} $width - Width of the breakpoint\r\n///\r\n/// @requires {Variable} $mq-breakpoints\r\n///\r\n/// @example scss\r\n///  @include mq-add-breakpoint(tvscreen, 1920px);\r\n///  @include mq(tvscreen) {}\r\n@mixin mq-add-breakpoint($name, $width) {\r\n  $new-breakpoint: ($name: $width);\r\n  $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\r\n}\r\n\r\n/// Show the active breakpoint in the top right corner of the viewport\r\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\r\n///\r\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\r\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\r\n///\r\n/// @requires {Variable} $mq-breakpoints\r\n/// @requires {Variable} $mq-show-breakpoints\r\n///\r\n/// @example scss\r\n///  // Show breakpoints using global settings\r\n///  @include mq-show-breakpoints;\r\n///\r\n///  // Show breakpoints using custom settings\r\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\r\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\r\n  body:before {\r\n    background-color: #FCF8E3;\r\n    border-bottom: 1px solid #FBEED5;\r\n    border-left: 1px solid #FBEED5;\r\n    color: #C09853;\r\n    font: small-caption;\r\n    padding: 3px 6px;\r\n    pointer-events: none;\r\n    position: fixed;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: 100;\r\n\r\n    // Loop through the breakpoints that should be shown\r\n    @each $show-breakpoint in $show-breakpoints {\r\n      $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\r\n      @include mq($show-breakpoint, $breakpoints: $breakpoints) {\r\n        content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@if length($mq-show-breakpoints) > 0 {\r\n  @include mq-show-breakpoints;\r\n}","// helpers\r\n\r\n.hide-from-tablet {\r\n\r\n  @media all and(min-width: 768px) {\r\n    display: none !important;\r\n  }\r\n}","// Svg\r\n\r\n.i-svg {\r\n  display: inline-block;\r\n  width: 1em;\r\n  height: 1em;\r\n  stroke-width: 0;\r\n  stroke: currentColor;\r\n  fill: currentColor;\r\n  transition: color 250ms, fill 250ms, stroke 250ms;\r\n}\r\n",".g-section {\r\n  overflow: hidden;\r\n}\r\n\r\n.g-wrap {\r\n  padding: 0 10px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n\r\n@include mq(bp768) {\r\n\r\n  .g-wrap {\r\n\r\n  }\r\n\r\n}\r\n\r\n@include mq(bp1024) {}\r\n@media screen and (min-width: 1200px) {}\r\n@media screen and (min-width: 1440px) {}","// Header\r\n\r\n.header {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 85px;\r\n  width: 100%;\r\n  //background: rgba(0, 0, 0, .3);\r\n  box-shadow: 0 4px 15px rgba(0,0,0,.05);\r\n  z-index: 100;\r\n\r\n  &__content {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    height: 85px;\r\n    position: relative;\r\n    transition: background .5s;\r\n\r\n    &.is-active {\r\n      background: $greyLight;\r\n    }\r\n  }\r\n\r\n  &__logo {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    z-index: 1;\r\n    height: 85px;\r\n    display: inline-block;\r\n\r\n    svg {\r\n      width: 100%;\r\n      height: inherit;\r\n\r\n      text{\r\n        text-anchor: middle;\r\n      }\r\n      #alpha{\r\n        fill: rgba(255,255,255, .4);\r\n        //animation: alpha 10s ease infinite;\r\n      }\r\n      #title{\r\n        font-size: 68px;\r\n        //font-weight: 800;\r\n        font-family: $circleExtraBold;\r\n      }\r\n      #subtitle{\r\n        letter-spacing: 8px;\r\n        font-size: 10px;\r\n        text-transform: uppercase;\r\n      }\r\n      #base{\r\n       // fill: green;\r\n        mask: url(#mask);\r\n      }\r\n    }\r\n  }\r\n\r\n  @include mq(bp1024) {\r\n\r\n    &__content {\r\n      padding: 0 10px;\r\n    }\r\n  }\r\n}\r\n\r\n@include mq(bp1024) {}","// Menu\r\n\r\n.menu {\r\n  display: none;\r\n  padding: 10px;\r\n  position: absolute;\r\n  top: 99%;\r\n  left: 0;\r\n  right: 0;\r\n  font-size: 0;\r\n  background: $greyLight;\r\n  box-shadow: 0 8px 15px rgba(0,0,0,.1);\r\n\r\n  &__btn {\r\n    position: absolute;\r\n    top: 26px;\r\n    right: 20px;\r\n    transform: rotate(0);\r\n    transition: .5s ease-in-out;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    -webkit-tap-highlight-color: transparent;\r\n    z-index: 1;\r\n    display: block;\r\n    width: 30px;\r\n    height: 20px;\r\n    padding: 4px 0;\r\n\r\n    &-line {\r\n      content: \"\";\r\n      position: absolute;\r\n      left: 0;\r\n      display: block;\r\n      width: 100%;\r\n      height: 2px;\r\n      background: $white;\r\n      border-radius: 2px;\r\n      transform: rotate(0);\r\n      transition: .25s ease-in-out;\r\n\r\n      &_top {\r\n        top: 0;\r\n      }\r\n\r\n      &_mid,\r\n      &_mid2 {\r\n        top: calc(50% - 1px);\r\n      }\r\n\r\n      &_btm {\r\n        bottom: 0;\r\n      }\r\n    }\r\n\r\n    &.is-active &-line {\r\n\r\n      &_top,\r\n      &_btm {\r\n        top: 7px;\r\n        left: 50%;\r\n        width: 0;\r\n        opacity: 0;\r\n      }\r\n\r\n      &_mid {\r\n        transform: rotate(45deg);\r\n      }\r\n\r\n      &_mid2 {\r\n        transform: rotate(-45deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  &__item {\r\n    display: block;\r\n    line-height: 32px;\r\n    font-size: 16px;\r\n    border-bottom: 1px solid $white;\r\n    transition: color .35s;\r\n    font-family: $circleBold;\r\n\r\n    &:last-child {\r\n      border: none;\r\n    }\r\n\r\n    &:hover {\r\n      color: $linkHover;\r\n    }\r\n\r\n    &_lang {\r\n      padding-top: 10px;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n    }\r\n  }\r\n\r\n  @include mq(bp768) {\r\n    z-index: 5;\r\n\r\n    &__btn {\r\n      top: 0;\r\n      bottom: 0;\r\n      margin: auto;\r\n    }\r\n\r\n    &__item {\r\n      margin-right: 34px;\r\n      display: inline-block;\r\n      border: none;\r\n\r\n      &_lang {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 0;\r\n        margin: 0;\r\n        float: right;\r\n      }\r\n    }\r\n  }\r\n\r\n  @include mq(bp1024) {\r\n    position: static;\r\n    padding: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    background: none;\r\n    box-shadow: none;\r\n    width: 100%;\r\n\r\n    &__btn {\r\n      display: none;\r\n    }\r\n\r\n    &__item {\r\n      color: $white;\r\n      position: relative;\r\n\r\n      &:after {\r\n        content: '';\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n        height: 2px;\r\n        width: 0;\r\n        background: $white;\r\n        transition: width .5s ease-out;\r\n      }\r\n\r\n      &:hover {\r\n        color: $white;\r\n\r\n        &:after {\r\n          width: 100%;\r\n        }\r\n      }\r\n\r\n      &_lang {\r\n        float: none;\r\n        margin-left: auto;\r\n\r\n        &:after {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.lang-link {\r\n  padding: 0 10px;\r\n  font-size: 14px;\r\n  font-family: $circleBold;\r\n  text-transform: uppercase;\r\n\r\n  @include mq(bp1024) {\r\n    color: $white;\r\n    position: relative;\r\n\r\n    &:first-child:before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        height: 0;\r\n        left: 0;\r\n        width: 2px;\r\n        background: $white;\r\n        transition: height .25s ease-out;\r\n      }\r\n    &:first-child:hover:before {\r\n      height: calc(100% - 10px);\r\n    }\r\n    &:first-child:after {\r\n      content: '';\r\n      position: absolute;\r\n      top: 0;\r\n      height: 2px;\r\n      left: 0;\r\n      width: 0;\r\n      background: $white;\r\n      transition: width .25s ease-out;\r\n    }\r\n    &:first-child:hover:after {\r\n      width: calc(100% - 10px);\r\n    }\r\n\r\n    &:last-child:before {\r\n      content: '';\r\n      position: absolute;\r\n      bottom: 0;\r\n      height: 2px;\r\n      left: 10px;\r\n      width: 0;\r\n      background: $white;\r\n      transition: width .25s ease-out;\r\n    }\r\n    &:last-child:hover:before {\r\n      width: calc(100% - 10px);\r\n    }\r\n    &:last-child:after {\r\n      content: '';\r\n      position: absolute;\r\n      top: 10px;\r\n      height: 0;\r\n      right: 0;\r\n      width: 2px;\r\n      background: $white;\r\n      transition: height .25s ease-out;\r\n    }\r\n    &:last-child:hover:after {\r\n      height: calc(100% - 10px);\r\n    }\r\n  }\r\n}","// Content\r\n\r\n.content {\r\n  padding: 0 0 20px;\r\n  min-height: calc(100vh - 128px);\r\n}","// Main top banner\r\n\r\n.carousel {\r\n  font-size: 30px;\r\n\r\n  &-cell {\r\n    width: 100%;\r\n    height: 300px;\r\n\r\n    &:nth-child(1) {\r\n      background: url('../img/cell1.jpg')no-repeat center 0/ cover;\r\n    }\r\n    &:nth-child(2) {\r\n      background: url('../img/cell2.jpg')no-repeat center 0/ cover;\r\n    }\r\n    &:nth-child(3) {\r\n      background: url('../img/cell3.jpg')no-repeat center 0/ cover;\r\n    }\r\n    &:nth-child(4) {\r\n      background: url('../img/cell4.jpg') no-repeat center 0/ cover;\r\n    }\r\n  }\r\n\r\n  @include mq(bp768) {\r\n\r\n    &-cell {\r\n      height: 400px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1200px) {\r\n\r\n    &-cell {\r\n      height: 450px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n\r\n    &-cell {\r\n      height: 500px;\r\n    }\r\n  }\r\n}","// About\r\n\r\n.about {\r\n\r\n  &__photo {\r\n    width: calc(100% + 20px);\r\n    margin: 0 -10px 30px;\r\n  }\r\n\r\n  &__text {\r\n\r\n    p + p {\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n\r\n  @include mq(bp768) {\r\n    display: flex;\r\n\r\n    &__photo {\r\n      width: 200px;\r\n      margin: 0 20px 20px 0;\r\n      float: left;\r\n    }\r\n  }\r\n}","// Footer\r\n\r\n.footer {\r\n  padding: 25px 0 20px;\r\n  background: $greyLight;\r\n\r\n  &__copyright {\r\n    text-align: center;\r\n    font-size: 12px;\r\n  }\r\n}","// Social\r\n\r\n.social {\r\n  margin: auto;\r\n  max-width: 300px;\r\n  height: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  &__item {\r\n    flex: 0 1 auto;\r\n    font-size: 34px;\r\n    transition: transform .25s ease-in-out;\r\n\r\n    &:hover {\r\n      //color: $linkHover;\r\n      transform: scale(1.02);\r\n    }\r\n  }\r\n}","// Block\r\n\r\n.block {\r\n  padding: 20px 0;\r\n\r\n  &__title {\r\n    text-align: center;\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n\r\n\r\n  @include mq(bp768) {\r\n\r\n    &__title {\r\n      text-align: left;\r\n    }\r\n\r\n    &__content {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n\r\n}","// Card\r\n\r\n.card {\r\n  outline: none;\r\n  text-align: center;\r\n\r\n\r\n  &__title {\r\n    margin: 10px 0 12px;\r\n    display: block;\r\n    font-size: 24px;\r\n    font-family: $circleBold;\r\n  }\r\n\r\n\r\n  &__img {\r\n    width: 100%;\r\n    cursor: pointer;\r\n    transition: transform .25s, box-shadow .25s;\r\n\r\n    &._acc {\r\n      height: 225px;\r\n    }\r\n  }\r\n\r\n\r\n  &__price {\r\n\r\n  }\r\n\r\n\r\n  // 768+\r\n  //------------------\r\n  @include mq(bp768) {\r\n    margin: 0 20px 20px;\r\n\r\n    &:hover &__img {\r\n      box-shadow: 0 10px 15px rgba(0, 0, 0, .35);\r\n    }\r\n  }\r\n}\r\n\r\n.card-list {\r\n  margin: 0 -10px;\r\n\r\n  .slick-arrow {\r\n    top: calc(50%);\r\n    transform: translateY(-100%);\r\n\r\n    &:hover {\r\n\r\n    }\r\n  }\r\n\r\n  // 1024+\r\n  //------------------\r\n  @include mq(bp1024) {\r\n\r\n    .slick-prev {\r\n      left: 0;\r\n    }\r\n\r\n    .slick-next {\r\n      right: 0;\r\n    }\r\n  }\r\n\r\n  // 1274+\r\n  //------------------\r\n  @include mq(bp1274) {\r\n\r\n    .slick-prev {\r\n      left: -38px;\r\n    }\r\n\r\n    .slick-next {\r\n      right: -38px;\r\n    }\r\n  }\r\n}\r\n\r\n",".modal {\r\n\r\n\r\n  &__close {\r\n    width: 22px;\r\n    height: 22px;\r\n    display: block;\r\n    position: absolute;\r\n    right: 10px;\r\n    top: -32px;\r\n    background: url('../img/icons/modal-close.svg')no-repeat 0 0;\r\n  }\r\n\r\n  &__title {\r\n    color: $white;\r\n  }\r\n\r\n  &__img {\r\n    font-size: 0;\r\n\r\n    img {\r\n      max-width: calc(100vw - 20px);\r\n      max-height: calc(100vh - 100px);\r\n    }\r\n  }\r\n\r\n  // 768+\r\n  //------------------\r\n  @include mq(bp768) {\r\n    padding: 35px 0;\r\n\r\n    &__close {\r\n      top: 0;\r\n      right: 0;\r\n    }\r\n  }\r\n}"]}